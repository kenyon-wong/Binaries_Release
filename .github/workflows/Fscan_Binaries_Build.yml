name: ðŸ”¨ Fscan Binaries Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, 386]
        exclude:
          - os: darwin
            arch: 386

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Clone Fscan repository
        uses: actions/checkout@v3
        with:
          repository: 'shadow1ng/fscan'
          path: fscan

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          cd fscan
          go build -v -o ../fscan-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" = "windows" ]; then
            mv ../fscan-${{ matrix.os }}-${{ matrix.arch }} ../fscan-${{ matrix.os }}-${{ matrix.arch }}.exe
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: fscan-${{ matrix.os }}-${{ matrix.arch }}
          path: fscan-${{ matrix.os }}-${{ matrix.arch }}*

  package:
    name: Package Binaries
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: binaries

      - name: Zip binaries
        run: |
          cd binaries
          for dir in */; do
            zip -j "${dir%/}.zip" "$dir"*
          done

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fscan-binaries
          path: binaries/*.zip