name: Docker Build and Test

on:
  push:
    branches:
      - main  # 你可以根据需要更改分支
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2  # 使用最新版本的 Checkout 动作

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0  # 使用指定版本的 Setup Buildx 动作
        with:
          install: true  # 将 docker build 命令设置为 docker buildx build 的别名

      - name: Build Docker image
        run: |
          docker buildx build --pull --cache-from type=registry -t my-node-app .
          # --pull ensures we get the latest base images
          # --cache-from type=registry enables build cache from registry

      - name: Run Docker container
        run: |
          docker run -d --name my-node-container my-node-app
          # Wait for the application to start
          until docker logs my-node-container 2>&1 | grep -q "Ready to serve"; do sleep 1; done
          # Replace "Ready to serve" with an actual log message from your app

      - name: Test app
        run: |
          # Get the IP address of the container
          ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-node-container)
          # Use curl to hit the health check endpoint
          response=$(curl -fs http://$ip:3000/healthz)
          if [ -z "$response" ]; then
            echo "App health check failed."
            exit 1
          else
            echo "App is healthy."
          fi

      - name: Clean up
        run: |
          docker stop my-node-container
          docker rm my-node-container
